$date
	Tue Nov  3 09:31:18 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module BUF $end
$var wire 1 ! A $end
$var wire 1 " Y $end
$upscope $end
$scope module DFF $end
$var wire 1 # C $end
$var wire 1 $ D $end
$var reg 1 % Q $end
$upscope $end
$scope module DFFSR $end
$var wire 1 & C $end
$var wire 1 ' D $end
$var wire 1 ( R $end
$var wire 1 ) S $end
$var reg 1 * Q $end
$upscope $end
$scope module NAND $end
$var wire 1 + A $end
$var wire 1 , B $end
$var wire 1 - Y $end
$upscope $end
$scope module NOR $end
$var wire 1 . A $end
$var wire 1 / B $end
$var wire 1 0 Y $end
$upscope $end
$scope module NOT $end
$var wire 1 1 A $end
$var wire 1 2 Y $end
$upscope $end
$scope module maquina $end
$var wire 1 3 FifoEmpty $end
$var wire 1 4 FifoFull $end
$var wire 1 5 FifoRead $end
$var wire 1 6 FifoWrite $end
$var wire 1 7 clk $end
$var wire 1 8 reset $end
$var wire 1 9 umbralD $end
$var wire 1 : umbralMF $end
$var wire 1 ; umbralVC $end
$var reg 1 < active_out $end
$var reg 1 = error_out $end
$var reg 1 > idle_out $end
$var reg 1 ? init_out $end
$var reg 4 @ next_state [3:0] $end
$var reg 4 A state [3:0] $end
$upscope $end
$scope module probador $end
$var wire 1 B active_out $end
$var wire 1 C active_out_estr $end
$var wire 1 D error_out $end
$var wire 1 E error_out_estr $end
$var wire 1 F idle_out $end
$var wire 1 G idle_out_estr $end
$var wire 1 H init_out $end
$var wire 1 I init_out_estr $end
$var reg 1 J FifoEmpty $end
$var reg 1 K FifoFull $end
$var reg 1 L FifoRead $end
$var reg 1 M FifoWrite $end
$var reg 1 N clk $end
$var reg 1 O reset $end
$var reg 1 P umbralD $end
$var reg 1 Q umbralMF $end
$var reg 1 R umbralVC $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0R
0Q
0P
0O
0N
0M
0L
0K
0J
zI
zH
zG
zF
zE
zD
zC
zB
bx A
bx @
x?
0>
0=
0<
z;
z:
z9
z8
z7
z6
z5
z4
z3
z2
z1
x0
z/
z.
x-
z,
z+
x*
z)
z(
z'
z&
x%
z$
z#
z"
z!
$end
#4
1O
1N
#8
0N
#12
1R
1Q
1N
#16
0N
#20
1J
1N
#24
0N
#28
0J
1N
#32
0N
#36
1N
#40
0N
#44
1K
1J
1N
#48
0N
#52
1M
1L
0J
1N
#56
0N
#60
0M
0L
0K
1N
#64
0N
#68
1N
